{"version":3,"sources":["utils/fetchClient.ts","App.tsx","api/users.ts","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/Header.tsx","components/Footer.tsx","components/TodoItems.tsx","api/todos.ts","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","ErrorType","client","getUserByEmail","email","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","AuthContext","React","createContext","AuthProvider","children","setUser","Provider","Header","props","query","setQuery","isAdding","toggleAll","isCompletedAll","visibleTodos","newTodoField","useRef","current","focus","length","active","onClick","ref","Footer","todos","setFilterType","filterType","clearCompleted","completedTodos","href","selected","style","opacity","TodoItems","handleComplite","isEditing","onEditing","todoTitleField","editingValue","setEditingValue","setIsEditing","deleteTodo","loadTodoIds","map","todo","completed","currentTarget","onBlur","onDoubleClick","title","includes","AddTodo","text","DeleteTodo","UpdateTodo","Empty","App","useContext","setTodos","setIsAdding","setError","setLoadTodoIds","isToggle","setIsToggle","userId","res","handleKeydown","key","document","addEventListener","removeEventListener","errorMsg","useCallback","erObj","find","er","prev","removeTodo","filter","catch","finally","todoId","status","item","all","toggled","useMemo","task","changeTitle","every","newTodo","addTodo","slice","forEach","hidden","Root","createRoot","getElementById","render"],"mappings":"6QAAMA,EAAW,oCAEjB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,WAAWD,EAASF,EACrB,GACF,CAID,SAASI,EACPC,GAIa,IAHbC,EAGY,uDAHY,MAExBC,EACY,uDADA,KAENC,EAAuB,CAAEF,UAS/B,OAPIC,IACFC,EAAQC,KAAOC,KAAKC,UAAUJ,GAC9BC,EAAQI,QAAU,CAChB,eAAgB,oCAIbb,EAAK,KACTc,MAAK,kBAAMC,MAAMhB,EAAWO,EAAKG,EAA5B,IACLK,MAAK,SAAAE,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAGZ,OAAOF,EAASG,MACjB,GACJ,CAEM,IChBFC,EDgBQC,EACN,SAAIf,GAAJ,OAAoBD,EAAWC,EAA/B,EADMe,EAEL,SAAIf,EAAaE,GAAjB,OAAmCH,EAAWC,EAAK,OAAQE,EAA3D,EAFKa,EAGJ,SAAIf,EAAaE,GAAjB,OAAmCH,EAAWC,EAAK,QAASE,EAA5D,EAHIa,EAIH,SAACf,GAAD,OAAiBD,EAAQC,EAAK,SAA9B,EErCGgB,EAAc,iDAAG,WAAOC,GAAP,iGACRF,EAAA,uBAAmCE,IAD3B,cACtBC,EADsB,yBAGrBA,EAAM,IAAM,MAHS,2CAAH,sDAQdC,EAAU,iDAAG,wGAASF,EAAT,EAASA,MAAOG,EAAhB,EAAgBA,KAAhB,kBACjBL,EAAkB,SAAU,CAAEE,QAAOG,UADpB,2CAAH,sD,OCDVC,EAA4B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1C,EAA0BC,mBAAS,IAAnC,mBAAON,EAAP,KAAcO,EAAd,KACA,EAAwBD,mBAAS,IAAjC,mBAAOH,EAAP,KAAaK,EAAb,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEMC,EAAW,SAACC,GAChBC,aAAaC,QAAQ,OAAQ9B,KAAKC,UAAU2B,IAC5CX,EAAQW,EACT,EAEDG,qBAAU,WACR,IAAMC,EAAWH,aAAaI,QAAQ,QAEtC,GAAKD,EAIL,IACE,IAAMJ,EAAO5B,KAAKkC,MAAMF,GAExBf,EAAQW,EAGT,CAFC,MAAOO,GACPT,EAAgB,gBACjB,CACF,GAAE,IAEH,IAAMU,EAAQ,iDAAG,8GACIzB,EAAeC,GADnB,QACTgB,EADS,QAIbD,EAASC,GAETN,GAAkB,GANL,2CAAH,qDAeRe,EAAY,iDAAG,WAAOC,GAAP,8EACnBA,EAAMC,iBAENb,EAAgB,IAChBF,GAAW,GAJQ,UAObH,EAPa,gCAJZP,EAAW,CAAEC,OAAMH,UACvBT,KAAKwB,GAGW,+CAUTS,IAVS,0DAajBV,EAAgB,yBAbC,yBAejBF,GAAW,GAfM,6EAAH,sDAmBlB,OACE,uBAAMgB,SAAUH,EAAcI,UAAU,WAAxC,UACE,oBAAIA,UAAU,aAAd,SACGpB,EAAiB,uBAAyB,yBAG7C,sBAAKoB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQC,QAAQ,aAAjC,mBAIA,sBACED,UAAWE,IAAW,yBAA0B,CAC9C,aAAcpB,IAFlB,UAKE,uBACEqB,KAAK,QACLC,GAAG,aACHJ,UAAWE,IAAW,QAAS,CAC7B,aAActB,GAAkBI,IAElCqB,YAAY,mBACZC,SAAUxB,GAAWF,EACrB2B,MAAOpC,EACPqC,UAAQ,EACRC,SAAU,SAAAC,GAAC,OAAIhC,EAASgC,EAAEC,OAAOJ,MAAtB,IAGb,sBAAMP,UAAU,wBAAhB,SACE,mBAAGA,UAAU,0BAIfpB,GAAkBI,GAClB,mBAAGgB,UAAU,iBAAb,SAA+BhB,OAIlCJ,GACC,sBAAKoB,UAAU,QAAf,UACE,uBACE,aAAW,OACXA,UAAU,QACVC,QAAQ,YAHV,uBAQA,sBACED,UAAWE,IAAW,yBAA0B,CAC9C,aAAcpB,IAFlB,UAKE,uBACEqB,KAAK,OACLC,GAAG,YACHJ,UAAWE,IAAW,QAAS,CAC7B,YAAatB,GAAkBI,IAEjCqB,YAAY,kBACZG,UAAQ,EACRI,UAAW,EACXN,SAAUxB,EACVyB,MAAOjC,EACPmC,SAAU,SAAAC,GAAC,OAAI/B,EAAQ+B,EAAEC,OAAOJ,MAArB,IAGb,sBAAMP,UAAU,wBAAhB,SACE,mBAAGA,UAAU,qBAIhBpB,GAAkBI,GACjB,mBAAGgB,UAAU,iBAAb,SAA+BhB,OAKrC,qBAAKgB,UAAU,QAAf,SACE,wBACEG,KAAK,SACLH,UAAWE,IAAW,oBAAqB,CACzC,aAAcpB,IAHlB,SAMGF,EAAiB,WAAa,cAKxC,EC/JYiC,EAAcC,IAAMC,cAA2B,MAM/CC,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9C,EAAwBxC,mBAAsB,MAA9C,mBAAOU,EAAP,KAAa+B,EAAb,KAEA,OAAK/B,EAKH,cAAC0B,EAAYM,SAAb,CAAsBZ,MAAOpB,EAA7B,SACG8B,IALI,cAAC,EAAD,CAAUzC,QAAS0C,GAQ7B,ECRYE,EAAoB,SAACC,GAChC,IACEC,EAOED,EAPFC,MACAC,EAMEF,EANFE,SACAC,EAKEH,EALFG,SACA5B,EAIEyB,EAJFzB,aACA6B,EAGEJ,EAHFI,UACAC,EAEEL,EAFFK,eACAC,EACEN,EADFM,aAGIC,EAAeC,iBAAyB,MAQ9C,OANAvC,qBAAU,WACJsC,EAAaE,SACfF,EAAaE,QAAQC,OAExB,GAAE,IAGD,yBAAQ/B,UAAU,kBAAlB,UACG2B,EAAaK,OAAS,GACrB,wBACE,UAAQ,kBACR7B,KAAK,SACL,aAAW,SACXH,UACEE,IAAW,sBAAuB,CAAE+B,OAAQP,IAE9CQ,QAAST,IAIb,sBAAM1B,SAAU,SAACW,GACfA,EAAEZ,iBACFF,GACD,EAHD,SAKE,uBACE,UAAQ,eACRO,KAAK,OACLgC,IAAKP,EACL5B,UAAU,oBACVK,YAAY,yBACZE,MAAOe,EACPb,SAAU,SAACC,GAAD,OAAOa,EAASb,EAAEC,OAAOJ,MAAzB,EACVD,UAAWkB,QAKpB,ECrDYY,EAAoB,SAACf,GAChC,IACEgB,EAKEhB,EALFgB,MACAC,EAIEjB,EAJFiB,cACAC,EAGElB,EAHFkB,WACAC,EAEEnB,EAFFmB,eACAC,EACEpB,EADFoB,eAGF,OACE,mCACoB,IAAjBJ,EAAML,QACL,yBAAQhC,UAAU,kBAAkB,UAAQ,SAA5C,UACE,sBAAMA,UAAU,aAAa,UAAQ,eAArC,mBACMqC,EAAML,OAASS,EAAeT,OADpC,iBAIA,sBAAKhC,UAAU,SAAS,UAAQ,SAAhC,UACE,mBACE,UAAQ,gBACR0C,KAAK,KACL1C,UAAWE,IACT,eAAgB,CAAEyC,SAAyB,QAAfJ,IAE9BL,QAAS,kBAAMI,EAAc,MAApB,EANX,iBAWA,mBACE,UAAQ,mBACRI,KAAK,WACL1C,UAAWE,IACT,eAAgB,CAAEyC,SAAyB,WAAfJ,IAE9BL,QAAS,kBAAMI,EAAc,SAApB,EANX,oBAUA,mBACE,UAAQ,sBACRI,KAAK,cACL1C,UAAWE,IACT,eAAgB,CAAEyC,SAAyB,cAAfJ,IAE9BL,QAAS,kBAAMI,EAAc,YAApB,EANX,0BAYF,wBACE,UAAQ,uBACRnC,KAAK,SACLH,UAAU,2BACVkC,QAASM,EACTI,MAAO,CAAEC,QAASJ,EAAeT,OAAS,EAAI,EAAI,GALpD,iCAaT,EC1DYc,EAAuB,SAACzB,GACnC,IACEM,EAUEN,EAVFM,aACAoB,EASE1B,EATF0B,eACAC,EAQE3B,EARF2B,UACAC,EAOE5B,EAPF4B,UACAC,EAME7B,EANF6B,eACAC,EAKE9B,EALF8B,aACAC,EAIE/B,EAJF+B,gBACAC,EAGEhC,EAHFgC,aACAC,EAEEjC,EAFFiC,WACAC,EACElC,EADFkC,YAGF,OACE,yBAASvD,UAAU,gBAAgB,UAAQ,WAA3C,SACG2B,EAAa6B,KAAI,SAAAC,GAAI,OACpB,sBACE,UAAQ,OACRzD,UAAWE,IAAW,OAAQ,CAAEwD,UAAWD,EAAKC,YAFlD,UAKE,uBAAO1D,UAAU,qBAAjB,SACE,uBACE,UAAQ,aACRG,KAAK,WACLH,UAAU,eACVS,SAAU,kBAAMsC,EAAeU,EAAKrD,GAAIqD,EAAKC,UAAnC,MAIbV,IAAcS,EAAKrD,GAEhB,sBACEL,SAAU,SAACW,GACTA,EAAEZ,iBACFmD,EAAUQ,EAAKrD,GAChB,EAJH,SAME,uBACE,UAAQ,iBACR+B,IAAKe,EACL/C,KAAK,OACLH,UAAU,oBACVK,YAAY,6BACZE,MAAO4C,EACP1C,SAAU,SAACC,GAAD,OAAO0C,EAAgB1C,EAAEiD,cAAcpD,MAAvC,EACVqD,OAAQ,kBAAMX,EAAUQ,EAAKrD,GAArB,MAKZ,qCACE,sBACE,UAAQ,YACRJ,UAAU,cACV6D,cAAe,WACbR,EAAaI,EAAKrD,IAClBgD,EAAgBK,EAAKK,MACtB,EANH,SAQGL,EAAKK,QAER,wBACE3D,KAAK,SACLH,UAAU,eACV,UAAQ,mBACRkC,QAAS,kBAAMoB,EAAWG,EAAKrD,GAAtB,EAJX,qBAWN,sBACE,UAAQ,aACRJ,UAAWE,IACT,gBAAiB,CACf,YAAaqD,EAAYQ,SAASN,EAAKrD,MAJ7C,UAQE,qBAAKJ,UAAU,8CACf,qBAAKA,UAAU,gBA/DZyD,EAAKrD,GAJQ,KA0E3B,G,SNxFIpC,O,qBAAAA,I,2BAAAA,I,2BAAAA,I,kBAAAA,M,KAOL,IAAMF,EAAQ,CACZ,CAAEqC,KAAMnC,EAAUgG,QAASC,KAAM,wBACjC,CAAE9D,KAAMnC,EAAUkG,WAAYD,KAAM,2BACpC,CAAE9D,KAAMnC,EAAUmG,WAAYF,KAAM,2BACpC,CAAE9D,KAAMnC,EAAUoG,MAAOH,KAAM,yBAGpBI,EAAoB,WAC/B,IAAMlF,EAAOmF,qBAAWzD,GAClBqC,EAAiBrB,iBAAyB,MAEhD,EAA0BpD,mBAAiB,IAA3C,mBAAO4D,EAAP,KAAckC,EAAd,KACA,EAAgC9F,oBAAS,GAAzC,mBAAO+C,EAAP,KAAiBgD,EAAjB,KACA,EAA0B/F,mBAAS,IAAnC,mBAAO6C,EAAP,KAAcC,EAAd,KACA,EAA0B9C,mBAAwB,MAAlD,mBAAOiB,EAAP,KAAc+E,EAAd,KACA,EAAsChG,mBAAmB,IAAzD,mBAAO8E,EAAP,KAAoBmB,EAApB,KACA,EAAoCjG,mBAAqB,OAAzD,mBAAO8D,EAAP,KAAmBD,EAAnB,KACA,EAAgC7D,oBAAS,GAAzC,mBAAOkG,EAAP,KAAiBC,EAAjB,KACA,EAAkCnG,mBAAwB,MAA1D,mBAAOuE,EAAP,KAAkBK,EAAlB,KACA,EAAwC5E,mBAAS,IAAjD,mBAAO0E,EAAP,KAAqBC,GAArB,KAEA9D,qBAAU,WOxCY,IAACuF,EPyCjB1F,IOzCiB0F,EP0CV1F,EAAKiB,GOzCXnC,EAAA,wBAAoC4G,KP0CpCnH,MAAK,SAAAoH,GAAG,OAAIP,EAASO,EAAb,GAEd,GAAE,IAEHxF,qBAAU,WACJ4D,EAAepB,SACjBoB,EAAepB,QAAQC,OAE1B,GAAE,CAACoB,EAAcD,IAElB5D,qBAAU,WACR,IAAMyF,EAAgB,SAAClF,GACH,WAAdA,EAAMmF,KACR3B,EAAa,KAEhB,EAID,OAFA4B,SAASC,iBAAiB,UAAWH,GAE9B,WACLE,SAASE,oBAAoB,UAAWJ,EACzC,CACF,GAAE,IAEH,IAAMK,GAAWC,uBAAY,SAAClF,GAC5B,IAAMmF,EAAQxH,EAAMyH,MAAK,SAAAC,GAAE,OAAIA,EAAGrF,OAASA,CAAhB,IAEvBmF,GACFb,EAASa,EAAMrB,MAGjBjH,YAAW,kBAAMyH,EAAS,KAAf,GAAsB,IAClC,GAAE,IAmCGnB,GAAa+B,uBAAY,SAACjF,GAC9BsE,GAAe,SAAAe,GAAI,4BAAQA,GAAR,CAAcrF,GAAd,IACnBqE,EAAS,MOxGa,SAACrE,GACzB,OAAOnC,EAAA,iBAAwBmC,GAChC,CPwGGsF,CAAWtF,GACR1C,MAAK,WACJ6G,GAAS,SAAAkB,GAAI,OAAIA,EAAKE,QAAO,SAAAlC,GAAI,OAAIA,EAAKrD,KAAOA,CAAhB,GAApB,GACd,IACAwF,OAAM,kBAAMR,GAASpH,EAAUkG,WAAzB,IACN2B,SAAQ,kBACPnB,GAAe,SAAAe,GAAI,OAAIA,EAAKE,QAAO,SAAAG,GAAM,OAAIA,IAAW1F,CAAf,GAAtB,GADZ,GAGZ,GAAE,CAACiC,IAUEU,GAAiBsC,uBAAY,SAACS,EAAgBC,GAGlD,IO3H2B3F,EAAYhD,EPyHvCqH,EAAS,MACTC,GAAe,SAAAe,GAAI,4BAAQA,GAAR,CAAcK,GAAd,KO1HQ1F,EP6HZ0F,EO7HwB1I,EP6HhB,CAAEsG,WAFHqC,GO1HjB9H,EAAA,iBAA6BmC,GAAMhD,IP6HrCM,MAAK,SAACoH,GACLP,GAAS,SAACkB,GAAD,OACPA,EAAKjC,KAAI,SAAAwC,GAAI,OAAKA,EAAK5F,KAAO0F,EAAShB,EAAMkB,CAAhC,GADN,GAGV,IACAJ,OAAM,kBAAMR,GAASpH,EAAUmG,WAAzB,IACN0B,SAAQ,kBAAMnB,GACb,SAAAe,GAAI,OAAIA,EAAKE,QAAO,SAAAvF,GAAE,OAAI0F,IAAW1F,CAAf,GAAlB,GADG,GAGZ,GAAE,IAEGqB,GAAY4D,sBAAW,gCAAC,8GACNvI,QAAQmJ,IAC5B5D,EAAMmB,KAAI,SAAAC,GAMR,OALIA,EAAKC,YAAciB,IACrBD,GAAe,SAAAe,GAAI,4BAAQA,GAAR,CAAchC,EAAKrD,IAAnB,IACnB2C,GAAeU,EAAKrD,GAAIqD,EAAKC,YAGxBD,CACR,KATyB,OACtByC,EADsB,OAY5B3B,EAAS2B,GACTtB,GAAY,SAAAa,GAAI,OAAKA,CAAL,IAbY,2CAc3B,CAACpD,IAEEV,GAAewE,mBAAQ,WAC3B,OAAQ5D,GACN,IAAK,SACH,OAAOF,EAAMsD,QAAO,SAAAlC,GAAI,OAAuB,IAAnBA,EAAKC,SAAT,IAE1B,IAAK,YACH,OAAOrB,EAAMsD,QAAO,SAAAlC,GAAI,OAAuB,IAAnBA,EAAKC,SAAT,IAE1B,QACE,OAAO,YAAIrB,GAEhB,GAAE,CAACE,EAAYF,IAEVY,GAAYoC,uBAAY,SAACjF,GAC7BqE,EAAS,MACT,IAAM2B,EAAO/D,EAAMkD,MAAK,SAAA9B,GAAI,OAAIA,EAAKrD,KAAOA,CAAhB,IAE5B,IAAQ,OAAJgG,QAAI,IAAJA,OAAA,EAAAA,EAAMtC,SAAUX,EAMlB,OALAE,EAAa,WACbqB,GACE,SAAAe,GAAI,OAAIA,EAAKE,QAAO,SAAAG,GAAM,OAAIA,IAAW1F,CAAf,GAAtB,IAMa,KAAjB+C,GAMJuB,GAAe,SAAAe,GAAI,4BAAQA,GAAR,CAAcrF,GAAd,IOrLI,SAACA,EAAYhD,GACtC,OAAOa,EAAA,iBAA6BmC,GAAMhD,EAC3C,CPqLGiJ,CAAYjG,EAAI,CAAE0D,MAAOX,IACtBzF,MAAK,SAACoH,GACLP,GAAS,SAACkB,GAAD,OACPA,EAAKjC,KAAI,SAAAwC,GAAI,OAAKA,EAAK5F,KAAOA,EAAK0E,EAAMkB,CAA5B,GADN,GAGV,IACAJ,OAAM,kBAAMR,GAASpH,EAAUmG,WAAzB,IACN0B,SAAQ,WACPxC,EAAa,MACbqB,GACE,SAAAe,GAAI,OAAIA,EAAKE,QAAO,SAAAG,GAAM,OAAIA,IAAW1F,CAAf,GAAtB,GAEP,KAnBDkD,GAAWlD,EAoBd,GAAE,CAACiC,EAAOc,IAELV,GAAiB0D,mBAAQ,WAG7B,OAFkB,YAAIxE,IAAcgE,QAAO,SAAAlC,GAAI,OAAuB,IAAnBA,EAAKC,SAAT,GAGhD,GAAE,CAACiB,EAAUhD,KAERD,GAAiByE,mBAAQ,WAI7B,OAHoB,YAAIxE,IACrB2E,OAAM,SAAA7C,GAAI,OAAuB,IAAnBA,EAAKC,SAAT,GAGd,GAAE,CAACiB,EAAUhD,KAEd,OACE,sBAAK3B,UAAU,UAAf,UACE,oBAAIA,UAAU,iBAAd,mBAEA,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,CACEsB,MAAOA,EACPC,SAAUA,EACVC,SAAUA,EACV5B,aA/Ja,YACnB6E,EAAS,MACTD,GAAY,GAEE,KAAVlD,GAMAnC,GOnFe,SAACoH,GACtB,OAAOtI,EAAY,SAAUsI,EAC9B,CPwFKC,CANgB,CACd1C,MAAOxC,EACPuD,OAAQ1F,EAAKiB,GACbsD,WAAW,IAIVhG,MAAK,SAAAoH,GACJJ,GAAe,SAAAe,GAAI,4BAAQA,GAAR,CAAcX,EAAI1E,IAAlB,IACnBmE,GAAS,SAACkB,GAAD,4BAAcA,GAAd,CAAoBX,GAApB,GACV,IACAc,OAAM,kBAAMR,GAASpH,EAAUgG,QAAzB,IACN6B,SAAQ,WACPnB,GAAe,SAAAe,GACb,OAAOA,EAAKgB,MAAM,GAAI,EACvB,IACDlF,EAAS,IACTiD,GAAY,EACb,IAxBHY,GAASpH,EAAUoG,MA0BtB,EAiIO3C,UAAWA,GACXC,eAAgBA,GAChBC,aAAcA,KAGhB,cAAC,EAAD,CACEA,aAAcA,GACdoB,eAAgBA,GAChBC,UAAWA,EACXC,UAAWA,GACXC,eAAgBA,EAChBC,aAAcA,EACdC,gBAAiBA,GACjBC,aAAcA,EACdC,WAAYA,GACZC,YAAaA,IAGf,cAAC,EAAD,CACElB,MAAOA,EACPE,WAAYA,EACZD,cAAeA,EACfE,eAvIe,WACrBH,EAAMqE,SAAQ,SAAAjD,GACRA,EAAKC,WACPJ,GAAWG,EAAKrD,GAEnB,GACF,EAkIOqC,eAAgBA,QAIpB,sBACE,UAAQ,oBACRzC,UAAWE,IACT,yDACA,CAAEyG,QAASjH,IAJf,UAOE,wBACE,UAAQ,kBACRS,KAAK,SACLH,UAAU,SACVkC,QAAS,kBAAMuC,EAAS,KAAf,IAEV/E,OAIR,EQvRKkH,EAAO,kBACX,cAAC,EAAD,UACE,cAAC,EAAD,KAFS,EAMbC,qBAAW5B,SAAS6B,eAAe,SAChCC,OAAO,cAAC,EAAD,I","file":"static/js/main.56e30fa6.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: unknown) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: unknown) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport classNames from 'classnames';\nimport React, {\n  useCallback,\n  useContext, useEffect, useMemo, useRef, useState,\n} from 'react';\nimport {\n  addTodo,\n  changeComplete,\n  changeTitle,\n  getTodos,\n  removeTodo,\n} from './api/todos';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\nimport { TodoItems } from './components/TodoItems';\nimport { FilterType, Todo } from './types/Todo';\n\n// eslint-disable-next-line no-shadow\nenum ErrorType {\n  AddTodo,\n  DeleteTodo,\n  UpdateTodo,\n  Empty,\n}\n\nconst Error = [\n  { type: ErrorType.AddTodo, text: 'Unable to add a todo' },\n  { type: ErrorType.DeleteTodo, text: 'Unable to delete a todo' },\n  { type: ErrorType.UpdateTodo, text: 'Unable to update a todo' },\n  { type: ErrorType.Empty, text: \"Title can't be empty\" },\n];\n\nexport const App: React.FC<{}> = () => {\n  const user = useContext(AuthContext);\n  const todoTitleField = useRef<HTMLInputElement>(null);\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isAdding, setIsAdding] = useState(true);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [loadTodoIds, setLoadTodoIds] = useState<number[]>([]);\n  const [filterType, setFilterType] = useState<FilterType>('all');\n  const [isToggle, setIsToggle] = useState(false);\n  const [isEditing, setIsEditing] = useState<number | null>(null);\n  const [editingValue, setEditingValue] = useState('');\n\n  useEffect(() => {\n    if (user) {\n      getTodos(user.id)\n        .then(res => setTodos(res));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (todoTitleField.current) {\n      todoTitleField.current.focus();\n    }\n  }, [editingValue, todoTitleField]);\n\n  useEffect(() => {\n    const handleKeydown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        setIsEditing(null);\n      }\n    };\n\n    document.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }, []);\n\n  const errorMsg = useCallback((type: ErrorType) => {\n    const erObj = Error.find(er => er.type === type);\n\n    if (erObj) {\n      setError(erObj.text);\n    }\n\n    setTimeout(() => setError(null), 3000);\n  }, []);\n\n  const handleSubmit = () => {\n    setError(null);\n    setIsAdding(false);\n\n    if (query === '') {\n      errorMsg(ErrorType.Empty);\n\n      return;\n    }\n\n    if (user) {\n      const newTodo = {\n        title: query,\n        userId: user.id,\n        completed: false,\n      };\n\n      addTodo(newTodo)\n        .then(res => {\n          setLoadTodoIds(prev => [...prev, res.id]);\n          setTodos((prev) => [...prev, res]);\n        })\n        .catch(() => errorMsg(ErrorType.AddTodo))\n        .finally(() => {\n          setLoadTodoIds(prev => {\n            return prev.slice(0, -1);\n          });\n          setQuery('');\n          setIsAdding(true);\n        });\n    }\n  };\n\n  const deleteTodo = useCallback((id: number) => {\n    setLoadTodoIds(prev => [...prev, id]);\n    setError(null);\n\n    removeTodo(id)\n      .then(() => {\n        setTodos(prev => prev.filter(todo => todo.id !== id));\n      })\n      .catch(() => errorMsg(ErrorType.DeleteTodo))\n      .finally(() => (\n        setLoadTodoIds(prev => prev.filter(todoId => todoId !== id))\n      ));\n  }, [todos]);\n\n  const clearCompleted = () => {\n    todos.forEach(todo => {\n      if (todo.completed) {\n        deleteTodo(todo.id);\n      }\n    });\n  };\n\n  const handleComplite = useCallback((todoId: number, status: boolean) => {\n    setError(null);\n    setLoadTodoIds(prev => [...prev, todoId]);\n    const newCompleted = !status;\n\n    changeComplete(todoId, { completed: newCompleted })\n      .then((res: Todo) => {\n        setTodos((prev) => (\n          prev.map(item => (item.id === todoId ? res : item))\n        ));\n      })\n      .catch(() => errorMsg(ErrorType.UpdateTodo))\n      .finally(() => setLoadTodoIds(\n        prev => prev.filter(id => todoId !== id),\n      ));\n  }, []);\n\n  const toggleAll = useCallback(async () => {\n    const toggled = await Promise.all(\n      todos.map(todo => {\n        if (todo.completed === isToggle) {\n          setLoadTodoIds(prev => [...prev, todo.id]);\n          handleComplite(todo.id, todo.completed);\n        }\n\n        return todo;\n      }),\n    );\n\n    setTodos(toggled);\n    setIsToggle(prev => !prev);\n  }, [todos]);\n\n  const visibleTodos = useMemo(() => {\n    switch (filterType) {\n      case 'active':\n        return todos.filter(todo => todo.completed === false);\n\n      case 'completed':\n        return todos.filter(todo => todo.completed === true);\n\n      default:\n        return [...todos];\n    }\n  }, [filterType, todos]);\n\n  const onEditing = useCallback((id: number) => {\n    setError(null);\n    const task = todos.find(todo => todo.id === id);\n\n    if (task?.title === editingValue) {\n      setIsEditing(null);\n      setLoadTodoIds(\n        prev => prev.filter(todoId => todoId !== id),\n      );\n\n      return;\n    }\n\n    if (editingValue === '') {\n      deleteTodo(id);\n\n      return;\n    }\n\n    setLoadTodoIds(prev => [...prev, id]);\n\n    changeTitle(id, { title: editingValue })\n      .then((res: Todo) => {\n        setTodos((prev) => (\n          prev.map(item => (item.id === id ? res : item))\n        ));\n      })\n      .catch(() => errorMsg(ErrorType.UpdateTodo))\n      .finally(() => {\n        setIsEditing(null);\n        setLoadTodoIds(\n          prev => prev.filter(todoId => todoId !== id),\n        );\n      });\n  }, [todos, editingValue]);\n\n  const completedTodos = useMemo(() => {\n    const complited = [...visibleTodos].filter(todo => todo.completed === true);\n\n    return complited;\n  }, [isToggle, visibleTodos]);\n\n  const isCompletedAll = useMemo(() => {\n    const isComplited = [...visibleTodos]\n      .every(todo => todo.completed === true);\n\n    return isComplited;\n  }, [isToggle, visibleTodos]);\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <Header\n          query={query}\n          setQuery={setQuery}\n          isAdding={isAdding}\n          handleSubmit={handleSubmit}\n          toggleAll={toggleAll}\n          isCompletedAll={isCompletedAll}\n          visibleTodos={visibleTodos}\n        />\n\n        <TodoItems\n          visibleTodos={visibleTodos}\n          handleComplite={handleComplite}\n          isEditing={isEditing}\n          onEditing={onEditing}\n          todoTitleField={todoTitleField}\n          editingValue={editingValue}\n          setEditingValue={setEditingValue}\n          setIsEditing={setIsEditing}\n          deleteTodo={deleteTodo}\n          loadTodoIds={loadTodoIds}\n        />\n\n        <Footer\n          todos={todos}\n          filterType={filterType}\n          setFilterType={setFilterType}\n          clearCompleted={clearCompleted}\n          completedTodos={completedTodos}\n        />\n      </div>\n\n      <div\n        data-cy=\"ErrorNotification\"\n        className={classNames(\n          'notification is-danger is-light has-text-weight-normal',\n          { hidden: !error },\n        )}\n      >\n        <button\n          data-cy=\"HideErrorButton\"\n          type=\"button\"\n          className=\"delete\"\n          onClick={() => setError(null)}\n        />\n        {error}\n      </div>\n    </div>\n  );\n};\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      setErrorMessage('Need to login');\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label\n            aria-label=\"name\"\n            className=\"label\"\n            htmlFor=\"user-name\"\n          >\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import classNames from 'classnames';\nimport { FC, useEffect, useRef } from 'react';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  query: string,\n  setQuery: (str: string) => void,\n  isAdding: boolean,\n  handleSubmit: () => void,\n  toggleAll: () => Promise<void>,\n  isCompletedAll: boolean,\n  visibleTodos: Todo[],\n};\n\nexport const Header: FC<Props> = (props) => {\n  const {\n    query,\n    setQuery,\n    isAdding,\n    handleSubmit,\n    toggleAll,\n    isCompletedAll,\n    visibleTodos,\n  } = props;\n\n  const newTodoField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n  }, []);\n\n  return (\n    <header className=\"todoapp__header\">\n      {visibleTodos.length > 0 && (\n        <button\n          data-cy=\"ToggleAllButton\"\n          type=\"button\"\n          aria-label=\"toggle\"\n          className={\n            classNames('todoapp__toggle-all', { active: isCompletedAll })\n          }\n          onClick={toggleAll}\n        />\n      )}\n\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        handleSubmit();\n      }}\n      >\n        <input\n          data-cy=\"NewTodoField\"\n          type=\"text\"\n          ref={newTodoField}\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          disabled={!isAdding}\n        />\n      </form>\n    </header>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { FilterType, Todo } from '../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  setFilterType: (str: FilterType) => void,\n  filterType: string,\n  clearCompleted:() => void,\n  completedTodos: Todo[],\n}\n\nexport const Footer: FC<Props> = (props) => {\n  const {\n    todos,\n    setFilterType,\n    filterType,\n    clearCompleted,\n    completedTodos,\n  } = props;\n\n  return (\n    <>\n      {todos.length !== 0 && (\n        <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n          <span className=\"todo-count\" data-cy=\"todosCounter\">\n            {`${todos.length - completedTodos.length} items left`}\n          </span>\n\n          <nav className=\"filter\" data-cy=\"Filter\">\n            <a\n              data-cy=\"FilterLinkAll\"\n              href=\"#/\"\n              className={classNames(\n                'filter__link', { selected: filterType === 'all' },\n              )}\n              onClick={() => setFilterType('all')}\n            >\n              All\n            </a>\n\n            <a\n              data-cy=\"FilterLinkActive\"\n              href=\"#/active\"\n              className={classNames(\n                'filter__link', { selected: filterType === 'active' },\n              )}\n              onClick={() => setFilterType('active')}\n            >\n              Active\n            </a>\n            <a\n              data-cy=\"FilterLinkCompleted\"\n              href=\"#/completed\"\n              className={classNames(\n                'filter__link', { selected: filterType === 'completed' },\n              )}\n              onClick={() => setFilterType('completed')}\n            >\n              Completed\n            </a>\n          </nav>\n\n          <button\n            data-cy=\"ClearCompletedButton\"\n            type=\"button\"\n            className=\"todoapp__clear-completed\"\n            onClick={clearCompleted}\n            style={{ opacity: completedTodos.length > 0 ? 1 : 0 }}\n          >\n            Clear completed\n          </button>\n        </footer>\n      )}\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { FC } from 'react';\nimport { Todo } from '../types/Todo';\n\ninterface Props {\n  visibleTodos: Todo[],\n  handleComplite: (todoId: number, status: boolean) => void,\n  isEditing: number | null,\n  onEditing: (id: number) => void,\n  todoTitleField: React.RefObject<HTMLInputElement>,\n  editingValue: string,\n  setEditingValue: React.Dispatch<React.SetStateAction<string>>,\n  setIsEditing: React.Dispatch<React.SetStateAction<number | null>>,\n  deleteTodo: (id: number) => void,\n  loadTodoIds: number[]\n}\n\nexport const TodoItems: FC<Props> = (props) => {\n  const {\n    visibleTodos,\n    handleComplite,\n    isEditing,\n    onEditing,\n    todoTitleField,\n    editingValue,\n    setEditingValue,\n    setIsEditing,\n    deleteTodo,\n    loadTodoIds,\n  } = props;\n\n  return (\n    <section className=\"todoapp__main\" data-cy=\"TodoList\">\n      {visibleTodos.map(todo => (\n        <div\n          data-cy=\"Todo\"\n          className={classNames('todo', { completed: todo.completed })}\n          key={todo.id}\n        >\n          <label className=\"todo__status-label\">\n            <input\n              data-cy=\"TodoStatus\"\n              type=\"checkbox\"\n              className=\"todo__status\"\n              onChange={() => handleComplite(todo.id, todo.completed)}\n            />\n          </label>\n\n          {isEditing === todo.id\n            ? (\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  onEditing(todo.id);\n                }}\n              >\n                <input\n                  data-cy=\"TodoTitleField\"\n                  ref={todoTitleField}\n                  type=\"text\"\n                  className=\"todo__title-field\"\n                  placeholder=\"Empty todo will be deleted\"\n                  value={editingValue}\n                  onChange={(e) => setEditingValue(e.currentTarget.value)}\n                  onBlur={() => onEditing(todo.id)}\n                />\n              </form>\n            )\n            : (\n              <>\n                <span\n                  data-cy=\"TodoTitle\"\n                  className=\"todo__title\"\n                  onDoubleClick={() => {\n                    setIsEditing(todo.id);\n                    setEditingValue(todo.title);\n                  }}\n                >\n                  {todo.title}\n                </span>\n                <button\n                  type=\"button\"\n                  className=\"todo__remove\"\n                  data-cy=\"TodoDeleteButton\"\n                  onClick={() => deleteTodo(todo.id)}\n                >\n                  ×\n                </button>\n              </>\n            )}\n\n          <div\n            data-cy=\"TodoLoader\"\n            className={classNames(\n              'modal overlay', {\n                'is-active': loadTodoIds.includes(todo.id),\n              },\n            )}\n          >\n            <div className=\"modal-background has-background-white-ter\" />\n            <div className=\"loader\" />\n          </div>\n        </div>\n      ))}\n\n    </section>\n  );\n};\n","import {\n  Compete,\n  Edit,\n  NewTodo,\n  Todo,\n} from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodo = (newTodo: NewTodo): Promise<Todo> => {\n  return client.post('/todos', newTodo);\n};\n\nexport const removeTodo = (id: number) => {\n  return client.delete(`/todos/${id}`);\n};\n\nexport const changeComplete = (id: number, data: Compete) => {\n  return client.patch<Todo>(`/todos/${id}`, data);\n};\n\nexport const changeTitle = (id: number, data: Edit) => {\n  return client.patch<Todo>(`/todos/${id}`, data);\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\nconst Root = () => (\n  <AuthProvider>\n    <App />\n  </AuthProvider>\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}